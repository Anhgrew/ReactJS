name: Lint Test

on:
  # Runs on pushes targeting the default branch
  # push:
  #   branches: ["master"]
  pull_request:
    branches:
      - 'master'
      - 'qa'
      - 'uat'
      - 'prod'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  checks: write
  id-token: write
  statuses: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: false
  
jobs:
  lint-and-test:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Detect package manager
        run: |
          echo "PACKAGE_MANAGER=npm" >> $GITHUB_ENV
          echo "PACKAGE_COMMAND=install" >> $GITHUB_ENV
          echo "PACKAGE_RUNNER=npm" >> $GITHUB_ENV
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "PACKAGE_MANAGER=yarn" >> $GITHUB_ENV
            echo "PACKAGE_COMMAND=install" >> $GITHUB_ENV
            echo "PACKAGE_RUNNER=yarn" >> $GITHUB_ENV
          fi
    
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.1"

      - name: Enable corepack and set Yarn version if Yarn is used
        if: ${{ env.PACKAGE_MANAGER }} == 'yarn'
        run: |
            corepack enable
            ${{ env.PACKAGE_MANAGER }} set version canary
          
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
                
      - name: Run lint command
        run: ${{ env.PACKAGE_RUNNER }} run lint

      # - name: Run unit test 
      #   run: ${{ env.PACKAGE_RUNNER }} run test
